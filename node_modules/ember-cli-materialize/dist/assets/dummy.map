{"version":3,"sources":["dummy/app.js","dummy/components/materialize-button-submit.js","dummy/components/materialize-button.js","dummy/components/materialize-navbar.js","dummy/ember-cli-materialize/tests/ember-cli-materialize/initializers/link-view.jshint.js","dummy/initializers/app-version.js","dummy/initializers/export-application-global.js","dummy/initializers/link-view.js","dummy/router.js","dummy/routes/buttons.js","dummy/templates/application.js","dummy/templates/buttons.js","dummy/templates/components/materialize-button.js","dummy/templates/components/materialize-navbar.js","dummy/templates/index.js","dummy/templates/navbar.js","dummy/tests/app.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/router.jshint.js","dummy/tests/routes/buttons.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jshint.js","dummy/tests/unit/components/materialize-button-submit-test.js","dummy/tests/unit/components/materialize-button-submit-test.jshint.js","dummy/tests/unit/components/materialize-button-test.js","dummy/tests/unit/components/materialize-button-test.jshint.js","dummy/tests/unit/components/materialize-navbar-test.js","dummy/tests/unit/components/materialize-navbar-test.jshint.js","dummy/tests/unit/initializers/link-view-test.js","dummy/tests/unit/initializers/link-view-test.jshint.js","dummy/tests/views/application.jshint.js","dummy/views/application.js","vendor/ember-cli/app-suffix.js"],"sourcesContent":["define('dummy/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', './config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('dummy/components/materialize-button-submit', ['exports', './materialize-button'], function (exports, materializeButton) {\n\n  'use strict';\n\n  exports['default'] = materializeButton['default'].extend({\n    layoutName: \"components/materialize-button\",\n    tagName: \"button\",\n    attributeBindings: [\"type\"],\n    type: \"submit\" });\n\n});","define('dummy/components/materialize-button', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    didInsertElement: function () {\n      this._super();\n      Ember['default'].run.scheduleOnce(\"afterRender\", this, function () {\n        var Waves = window.Waves || {};\n        if (typeof Waves.displayEffect === \"function\") {\n          Waves.displayEffect();\n        }\n      });\n    },\n    tagName: \"a\",\n    classNameBindings: [\"btn:waves-effect\", \"isFlat::waves-light\", \"isDisabled:disabled:waves-effect\", \"buttonClass\"],\n    text: null,\n    icon: null,\n    iconPosition: \"left\",\n    buttonType: null,\n    isFlat: Ember['default'].computed.equal(\"buttonType\", \"flat\"),\n    isDisabled: false,\n    buttonClass: (function () {\n      if (!this.get(\"buttonType\")) {\n        return \"btn\";\n      } else {\n        return \"btn-\" + this.get(\"buttonType\");\n      }\n    }).property(\"buttonType\"),\n    click: function () {\n      this.sendAction();\n    } });\n\n});","define('dummy/components/materialize-navbar', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    didInsertElement: function () {\n      this._super();\n      Ember['default'].run.scheduleOnce(\"afterRender\", this, function () {\n        if (typeof $(\".button-collapse\").sideNav === \"function\") {\n          $(\".button-collapse\").sideNav();\n        }\n      });\n    },\n    tagName: \"nav\" });\n\n});","define('dummy/ember-cli-materialize/tests/ember-cli-materialize/initializers/link-view.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - ember-cli-materialize/initializers\");\n  test(\"ember-cli-materialize/initializers/link-view.js should pass jshint\", function () {\n    ok(true, \"ember-cli-materialize/initializers/link-view.js should pass jshint.\");\n  });\n\n});","define('dummy/initializers/app-version', ['exports', '../config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function (container, application) {\n      var appName = classify(application.toString());\n      Ember['default'].libraries.register(appName, config['default'].APP.version);\n    }\n  };\n\n});","define('dummy/initializers/export-application-global', ['exports', 'ember', '../config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal) {\n      window[classifiedName] = application;\n    }\n  };\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n  exports.__esModule = true;\n\n});","define('dummy/initializers/link-view', ['exports', 'ember-cli-materialize/initializers/link-view'], function (exports, link_view) {\n\n  'use strict';\n\n  exports['default'] = {\n    name: \"link-view\",\n    initialize: link_view.initialize\n  };\n\n});","define('dummy/router', ['exports', 'ember', './config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route(\"buttons\");\n    this.route(\"navbar\");\n  });\n\n  exports['default'] = Router;\n\n});","define('dummy/routes/buttons', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    actions: {\n      debug: function () {\n        console.debug(\"Action debug sended\");\n      }\n    }\n  });\n\n});","define('dummy/templates/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n  <li>\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"buttons\", options) : helperMissing.call(depth0, \"link-to\", \"buttons\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</li>\\n  <li>\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navbar\", options) : helperMissing.call(depth0, \"link-to\", \"navbar\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</li>\\n\");\n    return buffer;\n    }\n  function program2(depth0,data) {\n    \n    \n    data.buffer.push(\"Buttons\");\n    }\n\n  function program4(depth0,data) {\n    \n    \n    data.buffer.push(\"Navbar\");\n    }\n\n    stack1 = (helper = helpers['materialize-navbar'] || (depth0 && depth0['materialize-navbar']),options={hash:{\n      'name': (\"ember-cli-materialize\")\n    },hashTypes:{'name': \"STRING\"},hashContexts:{'name': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"materialize-navbar\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n\");\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('dummy/templates/buttons', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<div class=\\\"section index-banner\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12 m9\\\">\\n        <h1 class=\\\"header\\\">Buttons</h1>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class='container'>\\n  <div class=\\\"section\\\">\\n    <div class=\\\"intro\\\">\\n        <h4 class=\\\"col s12 header\\\">The component supports many options:</h4>\\n        <ul>\\n          <li>text, default value <span class=\\\"default-value badge\\\">null</span></li>\\n          <li>action, default value <span class=\\\"default-value badge\\\">null</span></li>\\n          <li>icon, default value <span class=\\\"default-value badge\\\">null</span></li>\\n          <li>iconPosition, default value <span class=\\\"default-value badge\\\">left</span></li>\\n          <li>buttonType, default value <span class=\\\"default-value badge\\\">null</span></li>\\n          <li>isDisabled, default value <span class=\\\"default-value badge\\\">false</span></li>\\n        </ul>\\n      </div>\\n  </div>\\n  <div class=\\\"section\\\">\\n    <h4 class=\\\"col s12 header\\\">Raised</h4>\\n    <div class=\\\"button-example\\\">\\n      \");\n    data.buffer.push(escapeExpression((helper = helpers['materialize-button'] || (depth0 && depth0['materialize-button']),options={hash:{\n      'text': (\"Button\"),\n      'action': (\"debug\")\n    },hashTypes:{'text': \"STRING\",'action': \"STRING\"},hashContexts:{'text': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"materialize-button\", options))));\n    data.buffer.push(\"\\n      \");\n    data.buffer.push(escapeExpression((helper = helpers['materialize-button'] || (depth0 && depth0['materialize-button']),options={hash:{\n      'text': (\"Button\"),\n      'icon': (\"mdi-action-favorite\"),\n      'action': (\"debug\")\n    },hashTypes:{'text': \"STRING\",'icon': \"STRING\",'action': \"STRING\"},hashContexts:{'text': depth0,'icon': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"materialize-button\", options))));\n    data.buffer.push(\"\\n      \");\n    data.buffer.push(escapeExpression((helper = helpers['materialize-button'] || (depth0 && depth0['materialize-button']),options={hash:{\n      'text': (\"Button\"),\n      'icon': (\"mdi-action-favorite\"),\n      'iconPosition': (\"right\"),\n      'action': (\"debug\")\n    },hashTypes:{'text': \"STRING\",'icon': \"STRING\",'iconPosition': \"STRING\",'action': \"STRING\"},hashContexts:{'text': depth0,'icon': depth0,'iconPosition': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"materialize-button\", options))));\n    data.buffer.push(\"\\n\\n      <pre class=\\\" language-markup\\\">\\n        <code class=\\\" col s12 language-markup\\\">\\n          <span>&#123;&#123;</span>materialize-button text='Button' action='debug'<span>&#125;&#125;</span>\\n          <span>&#123;&#123;</span>materialize-button text='Button' icon='mdi-action-favorite' action='debug'<span>&#125;&#125;</span>\\n          <span>&#123;&#123;</span>materialize-button text='Button' icon='mdi-action-favorite' iconPosition='right' action='debug'<span>&#125;&#125;</span>\\n        </code>\\n      </pre>\\n    </div>\\n  </div>\\n  <div class=\\\"section\\\">\\n    <h4 class=\\\"col s12 header\\\">Floating</h4>\\n    <div class=\\\"button-example\\\">\\n      \");\n    data.buffer.push(escapeExpression((helper = helpers['materialize-button'] || (depth0 && depth0['materialize-button']),options={hash:{\n      'icon': (\"mdi-action-favorite\"),\n      'action': (\"debug\"),\n      'buttonType': (\"floating\")\n    },hashTypes:{'icon': \"STRING\",'action': \"STRING\",'buttonType': \"STRING\"},hashContexts:{'icon': depth0,'action': depth0,'buttonType': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"materialize-button\", options))));\n    data.buffer.push(\"\\n      <pre class=\\\" language-markup\\\">\\n        <code class=\\\" col s12 language-markup\\\">\\n          <span>&#123;&#123;</span>materialize-button icon='mdi-action-favorite' action='debug' buttonType='floating'<span>&#125;&#125;</span>\\n        </code>\\n      </pre>\\n    </div>\\n  </div>\\n  <div class=\\\"section\\\">\\n    <h4 class=\\\"col s12 header\\\">Flat</h4>\\n    <div class=\\\"button-example\\\">\\n      \");\n    data.buffer.push(escapeExpression((helper = helpers['materialize-button'] || (depth0 && depth0['materialize-button']),options={hash:{\n      'text': (\"Flat button\"),\n      'action': (\"debug\"),\n      'buttonType': (\"flat\")\n    },hashTypes:{'text': \"STRING\",'action': \"STRING\",'buttonType': \"STRING\"},hashContexts:{'text': depth0,'action': depth0,'buttonType': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"materialize-button\", options))));\n    data.buffer.push(\"\\n      <pre class=\\\" language-markup\\\">\\n        <code class=\\\" col s12 language-markup\\\">\\n          <span>&#123;&#123;</span>materialize-button text='Flat button' action='debug' buttonType='flat'<span>&#125;&#125;</span>\\n        </code>\\n      </pre>\\n    </div>\\n  </div>\\n  <div class=\\\"section\\\">\\n    <h4 class=\\\"col s12 header\\\">Submit</h4>\\n    <div class=\\\"button-example\\\">\\n      \");\n    data.buffer.push(escapeExpression((helper = helpers['materialize-button-submit'] || (depth0 && depth0['materialize-button-submit']),options={hash:{\n      'icon': (\"mdi-content-send\"),\n      'iconPosition': (\"right\"),\n      'text': (\"Submit\")\n    },hashTypes:{'icon': \"STRING\",'iconPosition': \"STRING\",'text': \"STRING\"},hashContexts:{'icon': depth0,'iconPosition': depth0,'text': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"materialize-button-submit\", options))));\n    data.buffer.push(\"\\n      <pre class=\\\" language-markup\\\">\\n        <code class=\\\" col s12 language-markup\\\">\\n          <span>&#123;&#123;</span>materialize-button-submit icon='mdi-content-send' iconPosition='right' text='Submit'<span>&#125;&#125;</span>\\n        </code>\\n      </pre>\\n    </div>\\n  </div>\\n  <div class=\\\"section\\\">\\n    <h4 class=\\\"col s12 header\\\">Large</h4>\\n    <div class=\\\"button-example\\\">\\n      \");\n    data.buffer.push(escapeExpression((helper = helpers['materialize-button'] || (depth0 && depth0['materialize-button']),options={hash:{\n      'text': (\"Large button\"),\n      'action': (\"debug\"),\n      'buttonType': (\"large\")\n    },hashTypes:{'text': \"STRING\",'action': \"STRING\",'buttonType': \"STRING\"},hashContexts:{'text': depth0,'action': depth0,'buttonType': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"materialize-button\", options))));\n    data.buffer.push(\"\\n      <pre class=\\\" language-markup\\\">\\n        <code class=\\\" col s12 language-markup\\\">\\n          <span>&#123;&#123;</span>materialize-button text='Large button' action='debug' buttonType='large'<span>&#125;&#125;</span>\\n        </code>\\n      </pre>\\n    </div>\\n  </div>\\n  <div class=\\\"section\\\">\\n    <h4 class=\\\"col s12 header\\\">Disabled</h4>\\n    <div class=\\\"button-example\\\">\\n      \");\n    data.buffer.push(escapeExpression((helper = helpers['materialize-button'] || (depth0 && depth0['materialize-button']),options={hash:{\n      'text': (\"Disabled button\"),\n      'isDisabled': (true)\n    },hashTypes:{'text': \"STRING\",'isDisabled': \"BOOLEAN\"},hashContexts:{'text': depth0,'isDisabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"materialize-button\", options))));\n    data.buffer.push(\"\\n      <pre class=\\\" language-markup\\\">\\n        <code class=\\\" col s12 language-markup\\\">\\n          <span>&#123;&#123;</span>materialize-button text='Disabled button' isDisabled=true<span>&#125;&#125;</span>\\n        </code>\\n      </pre>\\n    </div>\\n  </div>\\n</div>\\n\");\n    return buffer;\n    \n  });\n\n});","define('dummy/templates/components/materialize-button', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n  <i \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"icon iconPosition\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\"></i>\\n\");\n    return buffer;\n    }\n\n    stack1 = helpers['if'].call(depth0, \"icon\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    stack1 = helpers._triageMustache.call(depth0, \"text\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('dummy/templates/components/materialize-navbar', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n  function program1(depth0,data) {\n    \n    var stack1;\n    stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    else { data.buffer.push(''); }\n    }\n\n  function program3(depth0,data) {\n    \n    \n    data.buffer.push(\"<i class='mdi-navigation-menu'></i>\");\n    }\n\n    data.buffer.push(\"<div class='nav-wrapper'>\\n  <div class='container'>\\n    \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{\n      'class': (\"brand-logo\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"index\", options) : helperMissing.call(depth0, \"link-to\", \"index\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    <ul id='nav-mobile' class='right side-nav'>\\n      \");\n    stack1 = helpers._triageMustache.call(depth0, \"yield\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    </ul>\\n  </div>\\n  \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{\n      'class': (\"button-collapse\"),\n      'data-activates': (\"nav-mobile\")\n    },hashTypes:{'class': \"STRING\",'data-activates': \"STRING\"},hashContexts:{'class': depth0,'data-activates': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"index\", options) : helperMissing.call(depth0, \"link-to\", \"index\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n</div>\\n\");\n    return buffer;\n    \n  });\n\n});","define('dummy/templates/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n  function program1(depth0,data) {\n    \n    \n    data.buffer.push(\"Buttons<span class=\\\"badge\\\">6</span>\");\n    }\n\n  function program3(depth0,data) {\n    \n    \n    data.buffer.push(\"Navbar<span class=\\\"new badge\\\">1</span>\");\n    }\n\n    data.buffer.push(\"<div class=\\\"section index-banner\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12 m9\\\">\\n        <h1 class=\\\"header\\\">Ember Addon</h1>\\n        <h4 class=\\\"light red-text lighten-4\\\">for using <a href=\\\"http://materializecss.com/\\\" target=\\\"_blank\\\">Materialize</a> - a CSS Framework based on <a href=\\\"http://www.google.com/design/spec/material-design/introduction.html\\\" target=\\\"_blank\\\">Material Design</a> in Ember applications.</h4>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"github-commit\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"commit\\\">\\n      <a id=\\\"github-button\\\" href=\\\"https://github.com/sgasser/ember-cli-materialize\\\" class=\\\"btn-flat right grey-text lighten-5 waves-effect waves-light hide-on-med-and-down\\\">Github</a>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class='container'>\\n  <h2 class=\\\"col s12 header\\\">Main features</h2>\\n  <div class=\\\"section\\\">\\n    <div class=\\\"intro\\\">\\n      <ul>\\n        <li>Imports Materialize sass (via <a href=\\\"https://www.npmjs.com/package/ember-cli-sass\\\" target=\\\"_blank\\\">ember-cli-sass</a>) and fonts into your app.</li>\\n        <li>It's a components library for all Materialize components.</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <h2 class=\\\"col s12 header\\\">Usage</h2>\\n  <div class=\\\"section\\\">\\n    <ul class=\\\"collection\\\">\\n      \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{\n      'class': (\"collection-item\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"buttons\", options) : helperMissing.call(depth0, \"link-to\", \"buttons\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n      \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{\n      'class': (\"collection-item\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navbar\", options) : helperMissing.call(depth0, \"link-to\", \"navbar\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    </ul>\\n  </div>\\n\\n  <h2 class=\\\"col s12 header\\\">Installation</h2>\\n  <div class=\\\"section\\\">\\n    <pre class=\\\" language-markup\\\">\\n      <code class=\\\" col s12 language-markup\\\">\\n        # install via npm\\n        $ npm install ember-cli-materialize --save-dev\\n        # make ember-cli fetch internal dependencies\\n        $ ember g ember-cli-materialize\\n      </code>\\n    </pre>\\n  </diV>\\n</div>\\n\");\n    return buffer;\n    \n  });\n\n});","define('dummy/templates/navbar', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n        <li>\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navbar\", options) : helperMissing.call(depth0, \"link-to\", \"navbar\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</li>\\n      \");\n    return buffer;\n    }\n  function program2(depth0,data) {\n    \n    \n    data.buffer.push(\"Navbar\");\n    }\n\n    data.buffer.push(\"<div class=\\\"section index-banner\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12 m9\\\">\\n        <h1 class=\\\"header\\\">Navbar</h1>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class='container'>\\n  <div class=\\\"section\\\">\\n    <div class=\\\"intro\\\">\\n      <h4 class=\\\"col s12 header\\\">The component supports one option:</h4>\\n      <ul>\\n        <li>name, default value <span class=\\\"default-value badge\\\">null</span></li>\\n      </ul>\\n    </div>\\n  </div>\\n  <div class=\\\"section\\\">\\n    <h4 class=\\\"col s12 header\\\">Navbar with mobile collapse button</h4>\\n    <div class=\\\"button-example\\\">\\n      \");\n    stack1 = (helper = helpers['materialize-navbar'] || (depth0 && depth0['materialize-navbar']),options={hash:{\n      'name': (\"Example\")\n    },hashTypes:{'name': \"STRING\"},hashContexts:{'name': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"materialize-navbar\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n      <pre class=\\\" language-markup\\\">\\n        <code class=\\\" col s12 language-markup\\\">\\n          <span>&#123;&#123;</span>#materialize-navbar name='Example'<span>&#125;&#125;</span>\\n            <span>&#60;</span>li<span>&#62;</span><span>&#123;&#123;</span>#link-to 'navbar'<span>&#125;&#125;</span>Navbar<span>&#123;&#123;</span>/link-to<span>&#125;&#125;</span><span>&#60;</span>/li<span>&#62;</span>\\n          <span>&#123;&#123;</span>/materialize-navbar<span>&#125;&#125;</span>\\n        </code>\\n      </pre>\\n    </div>\\n  </div>\\n</div>\\n\");\n    return buffer;\n    \n  });\n\n});","define('dummy/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/resolver', ['exports', 'ember/resolver', '../../config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('dummy/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', '../../app', '../../router', '../../config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n  exports['default'] = startApp;\n\n});","define('dummy/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/routes/buttons.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/buttons.js should pass jshint', function() { \n    ok(true, 'routes/buttons.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/test-helper', ['./helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('dummy/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/materialize-button-submit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"materialize-button-submit\", \"MaterializeButtonSubmitComponent\", {\n    // specify the other units that are required for this test\n    // needs: ['component:foo', 'helper:bar']\n    needs: [\"template:components/materialize-button\"]\n  });\n\n  ember_qunit.test(\"it renders\", function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, \"preRender\");\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, \"inDOM\");\n  });\n\n  ember_qunit.test(\"it is added to the page\", function () {\n    var component = this.subject();\n    this.append();\n\n    ok($(\"button\").length);\n  });\n\n});","define('dummy/tests/unit/components/materialize-button-submit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/materialize-button-submit-test.js should pass jshint', function() { \n    ok(true, 'unit/components/materialize-button-submit-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/materialize-button-test', ['ember', 'ember-qunit'], function (Ember, ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"materialize-button\", \"MaterializeButtonComponent\", {});\n\n  ember_qunit.test(\"it renders\", function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, \"preRender\");\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, \"inDOM\");\n  });\n\n  ember_qunit.test(\"it is added to the page\", function () {\n    var component = this.subject();\n    this.append();\n\n    ok($(\"a\").length);\n\n    ok($(\"a\").hasClass(\"waves-light\"));\n    ok($(\"a\").hasClass(\"waves-effect\"));\n    ok($(\"a\").hasClass(\"btn\"));\n  });\n\n  ember_qunit.test(\"text test\", function () {\n    var component = this.subject();\n\n    Ember['default'].run(function () {\n      component.set(\"text\", \"Button\");\n    });\n\n    equal(this.$().html().trim(), \"Button\");\n  });\n\n  ember_qunit.test(\"icon test\", function () {\n    var component = this.subject();\n    this.append();\n\n    Ember['default'].run(function () {\n      component.set(\"icon\", \"mdi-action-favorite\");\n    });\n\n    ok($(\"i\").length);\n    ok($(\"i\").hasClass(\"mdi-action-favorite\"));\n    ok($(\"i\").hasClass(\"left\"));\n  });\n\n  ember_qunit.test(\"icon with position test\", function () {\n    var component = this.subject();\n    this.append();\n\n    Ember['default'].run(function () {\n      component.set(\"icon\", \"mdi-action-favorite\");\n      component.set(\"iconPosition\", \"right\");\n    });\n\n    ok($(\"i\").length);\n    ok($(\"i\").hasClass(\"mdi-action-favorite\"));\n    ok($(\"i\").hasClass(\"right\"));\n  });\n\n  ember_qunit.test(\"buttonType floating test\", function () {\n    var component = this.subject();\n    this.append();\n\n    Ember['default'].run(function () {\n      component.set(\"buttonType\", \"floating\");\n    });\n\n    ok($(\"a\").hasClass(\"waves-light\"));\n    ok($(\"a\").hasClass(\"waves-effect\"));\n    ok($(\"a\").hasClass(\"btn-floating\"));\n  });\n\n  ember_qunit.test(\"buttonType flat test\", function () {\n    var component = this.subject();\n    this.append();\n\n    Ember['default'].run(function () {\n      component.set(\"buttonType\", \"flat\");\n    });\n\n    ok($(\"a\").hasClass(\"waves-effect\"));\n    ok($(\"a\").hasClass(\"btn-flat\"));\n  });\n\n  ember_qunit.test(\"buttonType large test\", function () {\n    var component = this.subject();\n    this.append();\n\n    Ember['default'].run(function () {\n      component.set(\"buttonType\", \"large\");\n    });\n\n    ok($(\"a\").hasClass(\"waves-light\"));\n    ok($(\"a\").hasClass(\"waves-effect\"));\n    ok($(\"a\").hasClass(\"btn-large\"));\n  });\n\n  ember_qunit.test(\"isDisabled test\", function () {\n    var component = this.subject();\n    this.append();\n\n    Ember['default'].run(function () {\n      component.set(\"isDisabled\", \"true\");\n    });\n\n    ok($(\"a\").hasClass(\"waves-light\"));\n    ok($(\"a\").hasClass(\"disabled\"));\n    ok($(\"a\").hasClass(\"btn\"));\n  });\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('dummy/tests/unit/components/materialize-button-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/materialize-button-test.js should pass jshint', function() { \n    ok(true, 'unit/components/materialize-button-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/materialize-navbar-test', ['ember', 'ember-qunit'], function (Ember, ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"materialize-navbar\", \"MaterializeNavbarComponent\", {});\n\n  ember_qunit.test(\"it renders\", function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, \"preRender\");\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, \"inDOM\");\n  });\n\n  ember_qunit.test(\"it is added to the page\", function () {\n    var component = this.subject();\n    this.append();\n\n    ok($(\"nav\").length);\n  });\n\n  ember_qunit.test(\"name test\", function () {\n    var component = this.subject();\n    this.append();\n\n    Ember['default'].run(function () {\n      component.set(\"name\", \"Brand\");\n    });\n\n    equal($(\"a.brand-logo\").html().trim(), \"Brand\");\n  });\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('dummy/tests/unit/components/materialize-navbar-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/materialize-navbar-test.js should pass jshint', function() { \n    ok(true, 'unit/components/materialize-navbar-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/initializers/link-view-test', ['ember', 'ember-cli-materialize/initializers/link-view'], function (Ember, link_view) {\n\n  'use strict';\n\n  var container, application;\n\n  module(\"LinkViewInitializer\", {\n    setup: function () {\n      Ember['default'].run(function () {\n        application = Ember['default'].Application.create();\n        container = application.__container__;\n        application.deferReadiness();\n      });\n    }\n  });\n\n  test(\"\\\"data-activates\\\" is added to attributeBindings\", function () {\n    link_view.initialize(container, application);\n\n    var linkView = Ember['default'].LinkView.create();\n    ok(linkView.attributeBindings.indexOf(\"data-activates\") !== -1, \"'data-activates' must be present in `attributeBindings`\");\n  });\n\n});","define('dummy/tests/unit/initializers/link-view-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/initializers');\n  test('unit/initializers/link-view-test.js should pass jshint', function() { \n    ok(true, 'unit/initializers/link-view-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/views/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/application.js should pass jshint', function() { \n    ok(true, 'views/application.js should pass jshint.'); \n  });\n\n});","define('dummy/views/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].View.extend({\n    didInsertElement: function () {\n      this._super();\n      $(\".button-collapse\").sideNav();\n    }\n  });\n\n});","/* jshint ignore:start */\n\ndefine('dummy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'dummy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"dummy/tests/test-helper\");\n} else {\n  require(\"dummy/app\")[\"default\"].create({\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true,\"name\":\"ember-cli-materialize\",\"version\":\"0.2.1.166890b2\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"dummy.js"}